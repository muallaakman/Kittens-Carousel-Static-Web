AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation Template was written for running Kittens Carousel Static Website on EC2. 
  Kittens Carousel Static Website will be deployed on Amazon Linux 2023 EC2 Instance with custom 
  security group which allows http connections on port 80 and ssh port 22 from anywhere. Kittens 
  Carousel Static Website is downloaded from my Public Github repository, then deployed on Apache Web Server.

Parameters:
  imageID:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"
  keyPair:
    Description: Choose your keypair
    Type: AWS::EC2::KeyPair::KeyName
    Default: first_key
  instanceType:
    Description: choose your instant type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
      - t2.large

Resources:
  myWebServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref imageID
      InstanceType: !Ref instanceType
      KeyName: !Ref keyPair
      SecurityGroupIds:
        - !Ref mySecGrp # !GetAtt mySecGrp.GroupId
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
      UserData: !Base64 |
        #! /bin/bash
        yum update -y
        yum install httpd -y
        FOLDER="https://raw.githubusercontent.com/muallaakman/Kittens-Carousel-Static-Web/main/static-web"
        cd /var/www/html
        wget ${FOLDER}/index.html
        wget ${FOLDER}/cat0.jpg
        wget ${FOLDER}/cat1.jpg
        wget ${FOLDER}/cat2.jpg
        wget ${FOLDER}/cat3.jpg
        systemctl start httpd
        systemctl enable httpd

  mySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH and HTTP # Required
      GroupName: MuallaSecGrp
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 80
          CidrIp: 0.0.0.0/0

Outputs:
  webSiteURL:
    Description: URL of website
    Value: !Sub
      - http://${PublicDNS}
      - PublicDNS: !GetAtt myWebServer.PublicDnsName
